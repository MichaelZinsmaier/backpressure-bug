<scalastyle commentFilter="enabled">

	<name>Scalastyle configuration</name>


	<!-- File -->

	<check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
		<parameters>
			<parameter name="maxFileLength">800</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
		<parameters>
			<parameter name="maxLineLength">150</parameter>
			<parameter name="tabSize">2</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.file.HeaderMatchesChecker" enabled="true">
		<parameters>
			<parameter name="header">/* Copyrights owned by Atos and Siemens, 2015. */</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.file.IndentationChecker" enabled="false"> <!-- NOT WORKING CORRECTLY? False positives? -->
		<parameters>
			<parameter name="tabSize">2</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>

	<check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
		<parameters>
			<parameter name="regex">println</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>


	<!-- Scalariform -->

	<check level="warning" class="org.scalastyle.scalariform.BlockImportChecker" enabled="true"/>

	<check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
		<parameters>
			<parameter name="regex">[A-Z][A-Za-z0-9]*</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="true">
		<parameters>
			<parameter name="regex">[A-Z][a-z0-9]*</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="false"> <!-- UNUSABLE IN AKKA: receive method can have a large c. complexity (lot of cases), cannot forbid that -->
		<parameters>
			<parameter name="maximum">10</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" enabled="true">
		<parameters>
			<parameter name="maximum">LBRACKET, RBRACKET, LPAREN</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker" enabled="true">
		<parameters>
			<parameter name="maximum">LBRACKET, RBRACKET, RPAREN, SEMI, COMMA</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" enabled="true">
		<parameters>
			<parameter name="maximum">IF, ELSE, WHILE, FOR, TRY, CATCH, FINALLY, EQUALS, MATCH, COLON, LBRACE, LARROW, ARROW, SEMI, COMMA, YIELD, PLUS, AT</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" enabled="true">
		<parameters>
			<parameter name="maximum">EQUALS, LBRACE, RBRACE, LARROW, ARROW, COLON, PLUS, AT</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.ForBraceChecker" enabled="true"/>

	<check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
		<parameters>
			<parameter name="singleLineAllowed">true</parameter>
			<parameter name="doubleLineAllowed">false</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
		<parameters>
			<parameter name="illegalImports">sun._,java.awt._</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="false"></check> <!-- UNUSABLE IN AKKA: would also forbid import like "import context.dispatcher" to be inside the class -->

	<check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
			<parameters>
				<parameter name="ignore">-1,0,1,2,3</parameter>
			</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true"> <!-- TROUBLESOME IN AKKA: receive method can be longer... -->
		<parameters>
			<parameter name="maxLength">50</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
		<parameters>
			<parameter name="regex">[a-z][A-Za-z0-9]*(_=)?</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="false"> <!-- UNUSABLE? makes logging VERY difficult - would be forced to create fields like: val x = " already exists." -->
		<parameters>
			<parameter name="allowed">1</parameter>
			<parameter name="ignoreRegex"></parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.NonASCIICharacterChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.NotImplementedErrorUsage" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
		<parameters>
			<parameter name="maxMethods">30</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
		<parameters>
			<parameter name="maxTypes">20</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
		<parameters>
			<parameter name="regex">[A-Za-z0-9]*</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
		<parameters>
			<parameter name="regex">[a-z]*</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
		<parameters>
			<parameter name="maxParameters">8</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true">
		<parameters>
			<parameter name="ignoreOverride">false</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="false"></check>

	<check level="warning" class="org.scalastyle.scalariform.ScalaDocChecker" enabled="false"></check> <!-- NOT WORKING CORRECTLY? - for example ScalaDoc shouldn't be necessary in overridden methods -->

	<check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="false">  <!-- USED LATER? -->
		<parameters>
			<parameter name="regex">.</parameter>
		</parameters>
	</check>

	<check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>

	<check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"></check>

	<check level="warning" class="org.scalastyle.scalariform.VarLocalChecker" enabled="false"></check>

	<check level="warning" class="org.scalastyle.scalariform.WhileChecker" enabled="true"></check>

</scalastyle>
